cmake_minimum_required(VERSION 3.17)
project(ReduceExample)

# Put the location of Kokkos (Change to your own directory)
#set(CMAKE_PREFIX_PATH /Users/knteran/Kokkos)
set(CMAKE_CXX_STANDARD 14)

### UNCOMMENT THIS LINE TO ENABLE THE BUGS IN THE PROGRAMS
#set(CMAKE_CXX_FLAGS "-DWITH_BUG")
###

add_executable(InitializationBug InitializationBug.cpp)
add_executable(ViewDeepCopyMistake1 ViewDeepCopyMistake1.cpp)
add_executable(ViewDefaultMemorySpaceBug1 ViewDefaultMemorySpaceBug1.cpp)
add_executable(ViewOutOfBoundBug1 ViewOutOfBoundBug1.cpp)
add_executable(ViewOutOfBoundBug2 ViewOutOfBoundBug2.cpp)
add_executable(NotUsingAtomicsBug NotUsingAtomicsBug.cpp)
add_executable(NestedLoopBug1 NestedLoopBug1.cpp)
add_executable(DeepSoftCopyBug1 DeepSoftCopyBug1.cpp)
add_executable(RaceCondition1 RaceCondition1.cpp)
add_executable(RaceCondition2 RaceCondition2.cpp)
add_executable(RaceBetweenDevices1 RaceBetweenDevices1.cpp)
add_executable(RaceBetweenDevices2 RaceBetweenDevices2.cpp)
   # add_executable(CONST BUG DeepSoftCopyBug.cpp)

   #add_executable(ReduceMistake1_NoKokkos main_no_kokkos.cpp)
find_package(Kokkos)
find_package(OpenMP)
   # if (OPENMP_FOUND)
   #     set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
   #     set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
   #     set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
   # endif()
target_link_libraries(InitializationBug PUBLIC Kokkos::kokkos)
target_link_libraries(ViewDeepCopyMistake1 PUBLIC Kokkos::kokkos)
target_link_libraries(ViewDefaultMemorySpaceBug1 PUBLIC Kokkos::kokkos)
target_link_libraries(ViewOutOfBoundBug1 PUBLIC Kokkos::kokkos)
target_link_libraries(ViewOutOfBoundBug2 PUBLIC Kokkos::kokkos)
target_link_libraries(NotUsingAtomicsBug PUBLIC Kokkos::kokkos)
target_link_libraries(NestedLoopBug1 PUBLIC Kokkos::kokkos)
target_link_libraries(DeepSoftCopyBug1 PUBLIC Kokkos::kokkos)
target_link_libraries(RaceCondition1 PUBLIC Kokkos::kokkos)
target_link_libraries(RaceCondition2 PUBLIC Kokkos::kokkos)
target_link_libraries(RaceBetweenDevices1 PUBLIC Kokkos::kokkos)
target_link_libraries(RaceBetweenDevices2 PUBLIC Kokkos::kokkos)
